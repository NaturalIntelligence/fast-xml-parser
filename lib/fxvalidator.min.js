var XMLValidator;(()=>{"use strict";var e={825:(e,t)=>{var r=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",n="["+r+"]["+r+"\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*",i=new RegExp("^"+n+"$");t.isExist=function(e){return void 0!==e},t.isEmptyObject=function(e){return 0===Object.keys(e).length},t.merge=function(e,t,r){if(t)for(var n=Object.keys(t),i=n.length,a=0;a<i;a++)e[n[a]]="strict"===r?[t[n[a]]]:t[n[a]]},t.getValue=function(e){return t.isExist(e)?e:""},t.isName=function(e){return!(null==i.exec(e))},t.getAllMatches=function(e,t){for(var r=[],n=t.exec(e);n;){var i=[];i.startIndex=t.lastIndex-n[0].length;for(var a=n.length,l=0;l<a;l++)i.push(n[l]);r.push(i),n=t.exec(e)}return r},t.nameRegexp=n}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}var n={};(()=>{var e=n,t=r(825),i={allowBooleanAttributes:!1,unpairedTags:[]};function a(e){return" "===e||"\t"===e||"\n"===e||"\r"===e}function l(e,t){for(var r=t;t<e.length;t++)if("?"!=e[t]&&" "!=e[t]);else{var n=e.substr(r,t-r);if(t>5&&"xml"===n)return c("InvalidXml","XML declaration allowed only at the start of the document.",p(e,t));if("?"==e[t]&&">"==e[t+1]){t++;break}}return t}function u(e,t){if(e.length>t+5&&"-"===e[t+1]&&"-"===e[t+2]){for(t+=3;t<e.length;t++)if("-"===e[t]&&"-"===e[t+1]&&">"===e[t+2]){t+=2;break}}else if(e.length>t+8&&"D"===e[t+1]&&"O"===e[t+2]&&"C"===e[t+3]&&"T"===e[t+4]&&"Y"===e[t+5]&&"P"===e[t+6]&&"E"===e[t+7]){var r=1;for(t+=8;t<e.length;t++)if("<"===e[t])r++;else if(">"===e[t]&&0==--r)break}else if(e.length>t+9&&"["===e[t+1]&&"C"===e[t+2]&&"D"===e[t+3]&&"A"===e[t+4]&&"T"===e[t+5]&&"A"===e[t+6]&&"["===e[t+7])for(t+=8;t<e.length;t++)if("]"===e[t]&&"]"===e[t+1]&&">"===e[t+2]){t+=2;break}return t}e.validate=function(e,r){r=Object.assign({},i,r);var n,o=[],f=!1,g=!1;"\ufeff"===e[0]&&(e=e.substr(1));for(var h=0;h<e.length;h++)if("<"===e[h]&&"?"===e[h+1]){if((h=l(e,h+=2)).err)return h}else{if("<"!==e[h]){if(a(e[h]))continue;return c("InvalidChar","char '"+e[h]+"' is not expected.",p(e,h))}var m=h;if("!"===e[++h]){h=u(e,h);continue}var b=!1;"/"===e[h]&&(b=!0,h++);for(var x="";h<e.length&&">"!==e[h]&&" "!==e[h]&&"\t"!==e[h]&&"\n"!==e[h]&&"\r"!==e[h];h++)x+=e[h];if("/"===(x=x.trim())[x.length-1]&&(x=x.substring(0,x.length-1),h--),n=x,!t.isName(n))return c("InvalidTag",0===x.trim().length?"Invalid space after '<'.":"Tag '"+x+"' is an invalid name.",p(e,h));var F=s(e,h);if(!1===F)return c("InvalidAttr","Attributes for '"+x+"' have open quote.",p(e,h));var I=F.value;if(h=F.index,"/"===I[I.length-1]){var A=h-I.length,C=v(I=I.substring(0,I.length-1),r);if(!0!==C)return c(C.err.code,C.err.msg,p(e,A+C.err.line));f=!0}else if(b){if(!F.tagClosed)return c("InvalidTag","Closing tag '"+x+"' doesn't have proper closing.",p(e,h));if(I.trim().length>0)return c("InvalidTag","Closing tag '"+x+"' can't have attributes or invalid starting.",p(e,m));var k=o.pop();if(x!==k.tagName){var D=p(e,k.tagStartPos);return c("InvalidTag","Expected closing tag '"+k.tagName+"' (opened in line "+D.line+", col "+D.col+") instead of closing tag '"+x+"'.",p(e,m))}0==o.length&&(g=!0)}else{var T=v(I,r);if(!0!==T)return c(T.err.code,T.err.msg,p(e,h-I.length+T.err.line));if(!0===g)return c("InvalidXml","Multiple possible root nodes found.",p(e,h));-1!==r.unpairedTags.indexOf(x)||o.push({tagName:x,tagStartPos:m}),f=!0}for(h++;h<e.length;h++)if("<"===e[h]){if("!"===e[h+1]){h=u(e,++h);continue}if("?"!==e[h+1])break;if((h=l(e,++h)).err)return h}else if("&"===e[h]){var w=d(e,h);if(-1==w)return c("InvalidChar","char '&' is not expected.",p(e,h));h=w}else if(!0===g&&!a(e[h]))return c("InvalidXml","Extra text at the end",p(e,h));"<"===e[h]&&h--}return f?1==o.length?c("InvalidTag","Unclosed tag '"+o[0].tagName+"'.",p(e,o[0].tagStartPos)):!(o.length>0)||c("InvalidXml","Invalid '"+JSON.stringify(o.map((function(e){return e.tagName})),null,4).replace(/\r?\n/g,"")+"' found.",{line:1,col:1}):c("InvalidXml","Start tag expected.",1)};var o='"',f="'";function s(e,t){for(var r="",n="",i=!1;t<e.length;t++){if(e[t]===o||e[t]===f)""===n?n=e[t]:n!==e[t]||(n="");else if(">"===e[t]&&""===n){i=!0;break}r+=e[t]}return""===n&&{value:r,index:t,tagClosed:i}}var g=new RegExp("(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['\"])(([\\s\\S])*?)\\5)?","g");function v(e,r){for(var n=t.getAllMatches(e,g),i={},a=0;a<n.length;a++){if(0===n[a][1].length)return c("InvalidAttr","Attribute '"+n[a][2]+"' has no space in starting.",m(n[a]));if(void 0!==n[a][3]&&void 0===n[a][4])return c("InvalidAttr","Attribute '"+n[a][2]+"' is without value.",m(n[a]));if(void 0===n[a][3]&&!r.allowBooleanAttributes)return c("InvalidAttr","boolean attribute '"+n[a][2]+"' is not allowed.",m(n[a]));var l=n[a][2];if(!h(l))return c("InvalidAttr","Attribute '"+l+"' is an invalid name.",m(n[a]));if(i.hasOwnProperty(l))return c("InvalidAttr","Attribute '"+l+"' is repeated.",m(n[a]));i[l]=1}return!0}function d(e,t){if(";"===e[++t])return-1;if("#"===e[t])return function(e,t){var r=/\d/;for("x"===e[t]&&(t++,r=/[\da-fA-F]/);t<e.length;t++){if(";"===e[t])return t;if(!e[t].match(r))break}return-1}(e,++t);for(var r=0;t<e.length;t++,r++)if(!(e[t].match(/\w/)&&r<20)){if(";"===e[t])break;return-1}return t}function c(e,t,r){return{err:{code:e,msg:t,line:r.line||r,col:r.col}}}function h(e){return t.isName(e)}function p(e,t){var r=e.substring(0,t).split(/\r?\n/);return{line:r.length,col:r[r.length-1].length+1}}function m(e){return e.startIndex+e[1].length}})(),XMLValidator=n})();
//# sourceMappingURL=fxvalidator.min.js.map