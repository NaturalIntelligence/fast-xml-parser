{"version":3,"file":"./lib/fxbuilder.min.esm.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCQnE,SAASI,EAAMC,EAAQC,GAClC,IAAIC,EAAc,GAIlB,OAHID,EAAQE,QAAUF,EAAQG,SAASC,OAAS,IAC5CH,EAXI,MAaDI,EAASN,EAAQC,EAAS,GAAIC,EACzC,CAEA,SAASI,EAASC,EAAKN,EAASO,EAAON,GAInC,IAHA,IAAIO,EAAS,GACTC,GAAuB,EAElBC,EAAI,EAAGA,EAAIJ,EAAIF,OAAQM,IAAK,CACjC,IAAMC,EAASL,EAAII,GACbE,EAAUC,EAASF,GACzB,QAAeG,IAAZF,EAAH,CAEA,IAAIG,EAIJ,GAHwBA,EAAH,IAAjBR,EAAMH,OAAyBQ,EAChBL,EAAK,IAAIK,EAExBA,IAAYZ,EAAQgB,aAYjB,GAAIJ,IAAYZ,EAAQiB,cAOxB,GAAIL,IAAYZ,EAAQkB,gBAIxB,GAAmB,MAAfN,EAAQ,GAAZ,CASP,IAAIO,EAAgBlB,EACE,KAAlBkB,IACAA,GAAiBnB,EAAQG,UAE7B,IACMiB,EAAWnB,EAAW,IAAOW,EADpBS,EAAYV,EAAO,MAAOX,GAEnCsB,EAAWjB,EAASM,EAAOC,GAAUZ,EAASe,EAAUI,IACf,IAA3CnB,EAAQuB,aAAaC,QAAQZ,GACzBZ,EAAQyB,qBAAsBjB,GAAUY,EAAW,IAClDZ,GAAUY,EAAW,KACjBE,GAAgC,IAApBA,EAASlB,SAAiBJ,EAAQ0B,kBAEhDJ,GAAYA,EAASK,SAAS,KACrCnB,GAAUY,EAAQ,IAAOE,EAAWrB,EAAW,KAAKW,EAAO,KAE3DJ,GAAUY,EAAW,IACjBE,GAA4B,KAAhBrB,IAAuBqB,EAASM,SAAS,OAASN,EAASM,SAAS,OAChFpB,GAAUP,EAAcD,EAAQG,SAAWmB,EAAWrB,EAEtDO,GAAUc,EAEdd,GAAM,KAASI,EAAO,KAVtBJ,GAAUY,EAAW,KAYzBX,GAAuB,CAxBvB,KARO,CACH,IAAMoB,EAASR,EAAYV,EAAO,MAAOX,GACnC8B,EAAsB,SAAZlB,EAAqB,GAAKX,EACtC8B,EAAiBpB,EAAOC,GAAS,GAAGZ,EAAQgB,cAEhDR,GAAUsB,EAAO,IAAOlB,GADxBmB,EAA2C,IAA1BA,EAAe3B,OAAe,IAAM2B,EAAiB,IACnBF,EAAM,KACzDpB,GAAuB,CAE3B,MAXID,GAAUP,EAAW,UAAUU,EAAOC,GAAS,GAAGZ,EAAQgB,cAAa,SACvEP,GAAuB,OARnBA,IACAD,GAAUP,GAEdO,GAAM,YAAgBG,EAAOC,GAAS,GAAGZ,EAAQgB,cAAa,MAC9DP,GAAuB,MAjB3B,CACI,IAAIuB,EAAUrB,EAAOC,GAChBqB,EAAWlB,EAAUf,KAEtBgC,EAAUE,EADVF,EAAUhC,EAAQmC,kBAAkBvB,EAASoB,GACLhC,IAExCS,IACAD,GAAUP,GAEdO,GAAUwB,EACVvB,GAAuB,CAqB3B,CArCkC,CA8DtC,CAEA,OAAOD,CACX,CAEA,SAASK,EAASpB,GAEd,IADA,IAAM2C,EAAO/C,OAAO+C,KAAK3C,GAChBiB,EAAI,EAAGA,EAAI0B,EAAKhC,OAAQM,IAAK,CAClC,IAAMvB,EAAMiD,EAAK1B,GACjB,GAAIjB,EAAIG,eAAeT,IACX,OAARA,EAAc,OAAOA,CAC7B,CACJ,CAEA,SAASkC,EAAYgB,EAASrC,GAC1B,IAAIsC,EAAU,GACd,GAAID,IAAYrC,EAAQuC,iBACpB,IAAK,IAAIC,KAAQH,EACb,GAAIA,EAAQzC,eAAe4C,GAA3B,CACA,IAAIC,EAAUzC,EAAQ0C,wBAAwBF,EAAMH,EAAQG,KAE5C,KADhBC,EAAUP,EAAqBO,EAASzC,KAChBA,EAAQ2C,0BAC5BL,GAAO,IAAQE,EAAKI,OAAO5C,EAAQ6C,oBAAoBzC,QAEvDkC,GAAO,IAAQE,EAAKI,OAAO5C,EAAQ6C,oBAAoBzC,QAAO,KAAKqC,EAAO,GANpC,CAUlD,OAAOH,CACX,CAEA,SAASL,EAAW1B,EAAOP,GAEvB,IAAIY,GADJL,EAAQA,EAAMqC,OAAO,EAAGrC,EAAMH,OAASJ,EAAQgB,aAAaZ,OAAS,IACjDwC,OAAOrC,EAAMuC,YAAY,KAAO,GACpD,IAAK,IAAIC,KAAS/C,EAAQgD,UACtB,GAAIhD,EAAQgD,UAAUD,KAAWxC,GAASP,EAAQgD,UAAUD,KAAW,KAAOnC,EAAS,OAAO,EAElG,OAAO,CACX,CAEA,SAASsB,EAAqBe,EAAWjD,GACrC,GAAIiD,GAAaA,EAAU7C,OAAS,GAAKJ,EAAQkD,gBAC7C,IAAK,IAAIxC,EAAI,EAAGA,EAAIV,EAAQmD,SAAS/C,OAAQM,IAAK,CAC9C,IAAM0C,EAASpD,EAAQmD,SAASzC,GAChCuC,EAAYA,EAAUI,QAAQD,EAAOE,MAAOF,EAAOG,IACvD,CAEJ,OAAON,CACX,C,uHChIA,IAAMO,EAAiB,CACrBX,oBAAqB,KACrBY,qBAAqB,EACrBzC,aAAc,QACduB,kBAAkB,EAClBtB,eAAe,EACff,QAAQ,EACRC,SAAU,KACVuB,mBAAmB,EACnBD,sBAAsB,EACtBkB,2BAA2B,EAC3BR,kBAAmB,SAAShD,EAAKuE,GAC/B,OAAOA,CACT,EACAhB,wBAAyB,SAASiB,EAAUD,GAC1C,OAAOA,CACT,EACAE,eAAe,EACf1C,iBAAiB,EACjBK,aAAc,GACd4B,SAAU,CACR,CAAEG,MAAO,IAAIO,OAAO,IAAK,KAAMN,IAAK,SACpC,CAAED,MAAO,IAAIO,OAAO,IAAK,KAAMN,IAAK,QACpC,CAAED,MAAO,IAAIO,OAAO,IAAK,KAAMN,IAAK,QACpC,CAAED,MAAO,IAAIO,OAAO,IAAM,KAAMN,IAAK,UACrC,CAAED,MAAO,IAAIO,OAAO,IAAM,KAAMN,IAAK,WAEvCL,iBAAiB,EACjBF,UAAW,GAGXc,cAAc,GAGD,SAASC,EAAQ/D,GCvCjB,IAA+BuC,EDwC5CyB,KAAKhE,QAAUX,OAAO4E,OAAO,CAAC,EAAGT,EAAgBxD,IACX,IAAlCgE,KAAKhE,QAAQuC,kBAA6ByB,KAAKhE,QAAQyD,oBACzDO,KAAKE,YAAc,WACjB,OAAO,CACT,GAEAF,KAAKG,mBC7C2B,mBADU5B,ED8CMyB,KAAKhE,QAAQuC,kBC5ClDA,EAEP6B,MAAMC,QAAQ9B,GACP,SAACoB,GACJ,QAAsCW,EAAtCC,E,4rBAAAC,CAAsBjC,KAAgB+B,EAAAC,KAAAE,MAAE,CAAC,IAA9BC,EAAOJ,EAAAK,MACd,GAAuB,iBAAZD,GAAwBf,IAAae,EAC5C,OAAO,EAEX,GAAIA,aAAmBb,QAAUa,EAAQE,KAAKjB,GAC1C,OAAO,CAEf,CACJ,EAEG,kBAAM,CAAK,ED+BlBK,KAAKa,cAAgBb,KAAKhE,QAAQ6C,oBAAoBzC,OACtD4D,KAAKE,YAAcA,GAGrBF,KAAKc,qBAAuBA,EAExBd,KAAKhE,QAAQE,QACf8D,KAAKe,UAAYA,EACjBf,KAAKgB,WAAa,MAClBhB,KAAKiB,QAAU,OAEfjB,KAAKe,UAAY,WACf,MAAO,EACT,EACAf,KAAKgB,WAAa,IAClBhB,KAAKiB,QAAU,GAEnB,CAmHA,SAASH,EAAsBI,EAAQ/F,EAAKgG,EAAOC,GACjD,IAAMC,EAASrB,KAAKsB,IAAIJ,EAAQC,EAAQ,EAAGC,EAAOG,OAAOpG,IACzD,YAA0C2B,IAAtCoE,EAAOlB,KAAKhE,QAAQgB,eAA8D,IAA/B3B,OAAO+C,KAAK8C,GAAQ9E,OAClE4D,KAAKwB,iBAAiBN,EAAOlB,KAAKhE,QAAQgB,cAAe7B,EAAKkG,EAAO/C,QAAS6C,GAE9EnB,KAAKyB,gBAAgBJ,EAAO9B,IAAKpE,EAAKkG,EAAO/C,QAAS6C,EAEjE,CAuFA,SAASJ,EAAUI,GACjB,OAAOnB,KAAKhE,QAAQG,SAASuF,OAAOP,EACtC,CAEA,SAASjB,EAAYyB,GACnB,SAAIA,EAAKC,WAAW5B,KAAKhE,QAAQ6C,sBAAwB8C,IAAS3B,KAAKhE,QAAQgB,eACtE2E,EAAK/C,OAAOoB,KAAKa,cAI5B,CAzNAd,EAAQpE,UAAUkG,MAAQ,SAASC,GACjC,OAAG9B,KAAKhE,QAAQ4D,cACPmC,EAAmBD,EAAM9B,KAAKhE,UAElCoE,MAAMC,QAAQyB,IAAS9B,KAAKhE,QAAQgG,eAAiBhC,KAAKhE,QAAQgG,cAAc5F,OAAS,KACtF6F,EAAA,IACDjC,KAAKhE,QAAQgG,eAAiBF,EADjCA,EACqCG,GAGhCjC,KAAKsB,IAAIQ,EAAM,EAAG,IAAIvC,KALkE,IAAD0C,CAOlG,EAEAlC,EAAQpE,UAAU2F,IAAM,SAASQ,EAAMX,EAAOC,GAC5C,IAAI9C,EAAU,GACViB,EAAM,GACJhD,EAAQ6E,EAAOc,KAAK,KAC1B,IAAK,IAAI/G,KAAO2G,EACd,GAAIzG,OAAOM,UAAUC,eAAeC,KAAKiG,EAAM3G,GAC/C,QAAyB,IAAd2G,EAAK3G,GAEV6E,KAAKE,YAAY/E,KACnBoE,GAAO,SAEJ,GAAkB,OAAduC,EAAK3G,GAEV6E,KAAKE,YAAY/E,IAEVA,IAAQ6E,KAAKhE,QAAQiB,cAD9BsC,GAAO,GAGa,MAAXpE,EAAI,GACboE,GAAOS,KAAKe,UAAUI,GAAS,IAAMhG,EAAM,IAAM6E,KAAKgB,WAEtDzB,GAAOS,KAAKe,UAAUI,GAAS,IAAMhG,EAAM,IAAM6E,KAAKgB,gBAGnD,GAAIc,EAAK3G,aAAgBgH,KAC9B5C,GAAOS,KAAKwB,iBAAiBM,EAAK3G,GAAMA,EAAK,GAAIgG,QAC5C,GAAyB,iBAAdW,EAAK3G,GAAmB,CAExC,IAAMqD,EAAOwB,KAAKE,YAAY/E,GAC9B,GAAIqD,IAASwB,KAAKG,mBAAmB3B,EAAMjC,GACzC+B,GAAW0B,KAAKoC,iBAAiB5D,EAAM,GAAKsD,EAAK3G,SAC5C,IAAKqD,EAEV,GAAIrD,IAAQ6E,KAAKhE,QAAQgB,aAAc,CACrC,IAAIqF,EAASrC,KAAKhE,QAAQmC,kBAAkBhD,EAAK,GAAK2G,EAAK3G,IAC3DoE,GAAOS,KAAK9B,qBAAqBmE,EACnC,MACE9C,GAAOS,KAAKwB,iBAAiBM,EAAK3G,GAAMA,EAAK,GAAIgG,EAGvD,MAAO,GAAIf,MAAMC,QAAQyB,EAAK3G,IAAO,CAKnC,IAHA,IAAMmH,EAASR,EAAK3G,GAAKiB,OACrBmG,EAAa,GACbC,EAAc,GACTC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/B,IAAMC,EAAOZ,EAAK3G,GAAKsH,GACvB,QAAoB,IAATC,QAEJ,GAAa,OAATA,EACK,MAAXvH,EAAI,GAAYoE,GAAOS,KAAKe,UAAUI,GAAS,IAAMhG,EAAM,IAAM6E,KAAKgB,WACpEzB,GAAOS,KAAKe,UAAUI,GAAS,IAAMhG,EAAM,IAAM6E,KAAKgB,gBAEtD,GAAoB,iBAAT0B,EAChB,GAAG1C,KAAKhE,QAAQ8D,aAAa,CAC3B,IAAMuB,EAASrB,KAAKsB,IAAIoB,EAAMvB,EAAQ,EAAGC,EAAOG,OAAOpG,IACvDoH,GAAclB,EAAO9B,IACjBS,KAAKhE,QAAQyD,qBAAuBiD,EAAK9G,eAAeoE,KAAKhE,QAAQyD,uBACvE+C,GAAenB,EAAO/C,QAE1B,MACEiE,GAAcvC,KAAKc,qBAAqB4B,EAAMvH,EAAKgG,EAAOC,QAG5D,GAAIpB,KAAKhE,QAAQ8D,aAAc,CAC7B,IAAIb,EAAYe,KAAKhE,QAAQmC,kBAAkBhD,EAAKuH,GAEpDH,GADAtD,EAAYe,KAAK9B,qBAAqBe,EAExC,MACEsD,GAAcvC,KAAKwB,iBAAiBkB,EAAMvH,EAAK,GAAIgG,EAGzD,CACGnB,KAAKhE,QAAQ8D,eACdyC,EAAavC,KAAKyB,gBAAgBc,EAAYpH,EAAKqH,EAAarB,IAElE5B,GAAOgD,CACT,MAEE,GAAIvC,KAAKhE,QAAQyD,qBAAuBtE,IAAQ6E,KAAKhE,QAAQyD,oBAG3D,IAFA,IAAMkD,EAAKtH,OAAO+C,KAAK0D,EAAK3G,IACtByH,EAAID,EAAGvG,OACJqG,EAAI,EAAGA,EAAIG,EAAGH,IACrBnE,GAAW0B,KAAKoC,iBAAiBO,EAAGF,GAAI,GAAKX,EAAK3G,GAAKwH,EAAGF,UAG5DlD,GAAOS,KAAKc,qBAAqBgB,EAAK3G,GAAMA,EAAKgG,EAAOC,GAI9D,MAAO,CAAC9C,QAASA,EAASiB,IAAKA,EACjC,EAEAQ,EAAQpE,UAAUyG,iBAAmB,SAASzC,EAAUJ,GAGtD,OAFAA,EAAMS,KAAKhE,QAAQ0C,wBAAwBiB,EAAU,GAAKJ,GAC1DA,EAAMS,KAAK9B,qBAAqBqB,GAC5BS,KAAKhE,QAAQ2C,2BAAqC,SAARY,EACrC,IAAMI,EACD,IAAMA,EAAW,KAAOJ,EAAM,GAC9C,EAWAQ,EAAQpE,UAAU8F,gBAAkB,SAASlC,EAAKpE,EAAKmD,EAAS6C,GAC9D,GAAW,KAAR5B,EACD,MAAc,MAAXpE,EAAI,GAAoB6E,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAS,IAAM0B,KAAKgB,WAE1EhB,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAU0B,KAAK6C,SAAS1H,GAAO6E,KAAKgB,WAIjF,IAAI8B,EAAY,KAAO3H,EAAM6E,KAAKgB,WAC9B+B,EAAgB,GAQpB,MANc,MAAX5H,EAAI,KACL4H,EAAgB,IAChBD,EAAY,KAITxE,GAAuB,KAAZA,IAAyC,IAAtBiB,EAAI/B,QAAQ,MAEH,IAAjCwC,KAAKhE,QAAQkB,iBAA6B/B,IAAQ6E,KAAKhE,QAAQkB,iBAA4C,IAAzB6F,EAAc3G,OAClG4D,KAAKe,UAAUI,GAAM,UAAU5B,EAAG,SAAQS,KAAKiB,QAGpDjB,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAUyE,EAAgB/C,KAAKgB,WACnEzB,EACAS,KAAKe,UAAUI,GAAS2B,EAPjB9C,KAAKe,UAAUI,GAAS,IAAOhG,EAAMmD,EAAUyE,EAAgB,IAAMxD,EAAMuD,CAU1F,EAEA/C,EAAQpE,UAAUkH,SAAW,SAAS1H,GACpC,IAAI0H,EAAW,GAQf,OAP+C,IAA5C7C,KAAKhE,QAAQuB,aAAaC,QAAQrC,GAC/B6E,KAAKhE,QAAQyB,uBAAsBoF,EAAW,KAElDA,EADO7C,KAAKhE,QAAQ0B,kBACT,IAEH,MAASvC,EAEZ0H,CACT,EAcA9C,EAAQpE,UAAU6F,iBAAmB,SAASjC,EAAKpE,EAAKmD,EAAS6C,GAC/D,IAAmC,IAA/BnB,KAAKhE,QAAQiB,eAA2B9B,IAAQ6E,KAAKhE,QAAQiB,cAC/D,OAAO+C,KAAKe,UAAUI,GAAM,YAAe5B,EAAG,MAASS,KAAKiB,QACxD,IAAqC,IAAjCjB,KAAKhE,QAAQkB,iBAA6B/B,IAAQ6E,KAAKhE,QAAQkB,gBACvE,OAAO8C,KAAKe,UAAUI,GAAM,UAAU5B,EAAG,SAASS,KAAKiB,QACnD,GAAc,MAAX9F,EAAI,GACX,OAAQ6E,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAS,IAAM0B,KAAKgB,WAEhE,IAAI/B,EAAYe,KAAKhE,QAAQmC,kBAAkBhD,EAAKoE,GAGpD,MAAkB,MAFlBN,EAAYe,KAAK9B,qBAAqBe,IAG7Be,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAU0B,KAAK6C,SAAS1H,GAAO6E,KAAKgB,WAExEhB,KAAKe,UAAUI,GAAS,IAAMhG,EAAMmD,EAAU,IAClDW,EACD,KAAO9D,EAAM6E,KAAKgB,UAG1B,EAEAjB,EAAQpE,UAAUuC,qBAAuB,SAASe,GAChD,GAAGA,GAAaA,EAAU7C,OAAS,GAAK4D,KAAKhE,QAAQkD,gBACnD,IAAK,IAAIxC,EAAE,EAAGA,EAAEsD,KAAKhE,QAAQmD,SAAS/C,OAAQM,IAAK,CACjD,IAAM0C,EAASY,KAAKhE,QAAQmD,SAASzC,GACrCuC,EAAYA,EAAUI,QAAQD,EAAOE,MAAOF,EAAOG,IACrD,CAEF,OAAON,CACT,E","sources":["webpack://fast-xml-parser/webpack/bootstrap","webpack://fast-xml-parser/webpack/runtime/define property getters","webpack://fast-xml-parser/webpack/runtime/hasOwnProperty shorthand","webpack://fast-xml-parser/./src/xmlbuilder/orderedJs2Xml.js","webpack://fast-xml-parser/./src/xmlbuilder/json2xml.js","webpack://fast-xml-parser/./src/ignoreAttributes.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nexport default function toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\n","'use strict';\n//parse Empty Node as self closing node\nimport buildFromOrderedJs from './orderedJs2Xml.js';\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nexport default function Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0, []).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level, ajPath) {\n  let attrStr = '';\n  let val = '';\n  const jPath = ajPath.join('.')\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key === this.options.cdataPropName) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr && !this.ignoreAttributesFn(attr, jPath)) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      } else if (!attr) {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1, ajPath.concat(key));\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level, ajPath)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level, ajPath)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level, ajPath) {\n  const result = this.j2x(object, level + 1, ajPath.concat(key));\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\n","export default function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","toXml","jArray","options","indentation","format","indentBy","length","arrToStr","arr","jPath","xmlStr","isPreviousElementTag","i","tagObj","tagName","propName","undefined","newJPath","textNodeName","cdataPropName","commentPropName","newIdentation","tagStart","attr_to_str","tagValue","unpairedTags","indexOf","suppressUnpairedNode","suppressEmptyNode","endsWith","includes","attStr","tempInd","piTextNodeName","tagText","isStopNode","replaceEntitiesValue","tagValueProcessor","keys","attrMap","attrStr","ignoreAttributes","attr","attrVal","attributeValueProcessor","suppressBooleanAttributes","substr","attributeNamePrefix","lastIndexOf","index","stopNodes","textValue","processEntities","entities","entity","replace","regex","val","defaultOptions","attributesGroupName","a","attrName","preserveOrder","RegExp","oneListGroup","Builder","this","assign","isAttribute","ignoreAttributesFn","Array","isArray","_step","_iterator","_createForOfIteratorHelperLoose","done","pattern","value","test","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","ajPath","result","j2x","concat","buildTextValNode","buildObjectNode","repeat","name","startsWith","build","jObj","buildFromOrderedJs","arrayNodeName","_jObj","join","Date","buildAttrPairStr","newval","arrLen","listTagVal","listTagAttr","j","item","Ks","L","closeTag","tagEndExp","piClosingChar"],"sourceRoot":""}